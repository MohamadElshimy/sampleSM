plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
}

group = 'com.exalt.learning'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

configurations {
    jaxb
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.ws:spring-ws-core:3.1.3'
    implementation 'javax.xml.soap:javax.xml.soap-api:1.4.0'
    implementation 'com.sun.xml.messaging.saaj:saaj-impl:2.0.1'
    implementation 'com.aerospike:spring-data-aerospike:3.4.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

dependencies {
    jaxb (
            'com.sun.xml.bind:jaxb-core:2.3.0.1',
            'com.sun.xml.bind:jaxb-xjc:2.3.2',
            'com.sun.xml.bind:jaxb-impl:2.3.2'
    )
}

task generateJavaClasses {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("src/main/java/")
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'com.exalt.learning.sampleSM.generated',
                schema: 'http://localhost:8080/soapws/buckets.wsdl',
                language: 'WSDL'
        )
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
